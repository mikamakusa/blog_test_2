---
apiVersion: v1
kind: Namespace
metadata:
  name: blog-test
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: microservice-ads-blog-test
  namespace: blog-test
spec:
  selector:
    matchLabels:
      app: microservice-ads-blog-test
  template:
    metadata:
      labels:
        app: microservice-ads-blog-test
        role: ads
    spec:
      containers:
        - name: microservice-ads-blog-test
          image: mikamakusa/blog-test-ads-service:latest
          resources:
            requests:
              memmory: "32Mi"
              cpu: "100m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          env:
            - name: PORT
              value: "5003"
            - name: MONGODB_URI
              value: "mongodb://blog-admin:password01@localhost:32768/blog-engine"
            - name: JWT_SECRET
              value: "your-super-secret-jwt-key"
            - name: SESSION_SECRET
              value: "your-super-secret-session-key"
            - name: FRONTEND_URL
              value: "http://localhost:3000"
            - name: GOOGLE_CLIENT_ID
              value: "your-google-client-id"
            - name: GOOGLE_CLIENT_SECRET
              value: "your-google-client-secret"
            - name: STRAPI_URL
              value: "http://localhost:1337"
          ports:
            - containerPort: 5003
              name: http
              protocol: TCP
          livenessProbe:
            httpGet:
              port: http
              path: /api/ads
          readinessProbe:
            httpGet:
              port: http
              path: /api/ads
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: microservice-auth-blog-test
  namespace: blog-test
spec:
  selector:
    matchLabels:
      app: microservice-auth-blog-test
  template:
    metadata:
      labels:
        app: microservice-auth-blog-test
        role: auth
    spec:
      containers:
        - name: microservice-auth-blog-test
          image: mikamakusa/blog-test-auth-service
          resources:
            requests:
              memmory: "32Mi"
              cpu: "100m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          env:
            - name: PORT
              value: "5000"
            - name: MONGODB_URI
              value: "mongodb://blog-admin:password01@localhost:32768/blog-engine"
            - name: JWT_SECRET
              value: "your-super-secret-jwt-key"
            - name: SESSION_SECRET
              value: "your-super-secret-session-key"
            - name: FRONTEND_URL
              value: "http://localhost:3000"
            - name: GOOGLE_CLIENT_ID
              value: "your-google-client-id"
            - name: GOOGLE_CLIENT_SECRET
              value: "your-google-client-secret"
            - name: STRAPI_URL
              value: "http://localhost:1337"
          ports:
            - containerPort: 5000
              name: http
              protocol: TCP
          livenessProbe:
            httpGet:
              port: http
              path: /auth
          readinessProbe:
            httpGet:
              port: http
              path: /auth
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: microservice-events-blog-test
  namespace: blog-test
spec:
  selector:
    matchLabels:
      app: microservice-events-blog-test
  template:
    metadata:
      labels:
        app: microservice-events-blog-test
        role: events
    spec:
      containers:
        - name: microservice-events-blog-test
          image: mikamakusa/blog-test-events-service
          resources:
            requests:
              memmory: "32Mi"
              cpu: "100m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          env:
            - name: PORT
              value: "3001"
            - name: MONGODB_URI
              value: "mongodb://blog-admin:password01@localhost:32768/blog-engine"
          ports:
            - containerPort: 5000
              name: http
              protocol: TCP
          livenessProbe:
            httpGet:
              port: http
              path: /api/events
          readinessProbe:
            httpGet:
              port: http
              path: /api/events
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: microservice-medias-blog-test
  namespace: blog-test
spec:
  selector:
    matchLabels:
      app: microservice-medias-blog-test
  template:
    metadata:
      labels:
        app: microservice-medias-blog-test
        role: medias
    spec:
      containers:
        - name: microservice-medias-blog-test
          image: mikamakusa/blog-test-medias-service
          resources:
            requests:
              memmory: "32Mi"
              cpu: "100m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          env:
            - name: PORT
              value: "5004"
            - name: MONGODB_URI
              value: "mongodb://blog-admin:password01@localhost:32768/blog-engine"
            - name: MINIO_ENDPOINT
              value: "localhost"
            - name: MINIO_PORT
              value: "9000"
            - name: MINIO_ACCESS_KEY
              value: "minioadmin"
            - name: MINIO_SECRET_KEY
              value: "minioadmin"
          ports:
            - containerPort: 5004
              name: http
              protocol: TCP
          livenessProbe:
            httpGet:
              port: http
              path: /api/medias
          readinessProbe:
            httpGet:
              port: http
              path: /api/medias
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: microservice-metrics-blog-test
  namespace: blog-test
spec:
  selector:
    matchLabels:
      app: microservice-metrics-blog-test
  template:
    metadata:
      labels:
        app: microservice-metrics-blog-test
        role: metrics
    spec:
      containers:
        - name: microservice-metrics-blog-test
          image: mikamakusa/blog-test-metrics-service
          resources:
            requests:
              memmory: "32Mi"
              cpu: "100m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          env:
            - name: PORT
              value: "5005"
            - name: MONGODB_URI
              value: "mongodb://blog-admin:password01@localhost:32768/blog-engine"
            - name: JWT_SECRET
              value: "your-super-secret-jwt-key"
            - name: SESSION_SECRET
              value: "your-super-secret-session-key"
            - name: FRONTEND_URL
              value: "http://localhost:3000"
            - name: GOOGLE_CLIENT_ID
              value: "your-google-client-id"
            - name: GOOGLE_CLIENT_SECRET
              value: "your-google-client-secret"
            - name: STRAPI_URL
              value: "http://localhost:1337"
          ports:
            - containerPort: 5005
              name: http
              protocol: TCP
          livenessProbe:
            httpGet:
              port: http
              path: /api/metrics
          readinessProbe:
            httpGet:
              port: http
              path: /api/metrics
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: microservice-polls-blog-test
  namespace: blog-test
spec:
  selector:
    matchLabels:
      app: microservice-polls-blog-test
  template:
    metadata:
      labels:
        app: microservice-polls-blog-test
        role: polls
    spec:
      containers:
        - name: microservice-polls-blog-test
          image: mikamakusa/blog-test-polls-service
          resources:
            requests:
              memmory: "32Mi"
              cpu: "100m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          env:
            - name: PORT
              value: "5006"
            - name: MONGODB_URI
              value: "mongodb://blog-admin:password01@localhost:32768/blog-engine"
            - name: JWT_SECRET
              value: "your-super-secret-jwt-key"
          ports:
            - containerPort: 5006
              name: http
              protocol: TCP
          livenessProbe:
            httpGet:
              port: http
              path: /api/polls
          readinessProbe:
            httpGet:
              port: http
              path: /api/polls
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: microservice-users-blog-test
  namespace: blog-test
spec:
  selector:
    matchLabels:
      app: microservice-users-blog-test
  template:
    metadata:
      labels:
        app: microservice-users-blog-test
        role: users
    spec:
      containers:
        - name: microservice-users-blog-test
          image: mikamakusa/blog-test-users-service
          resources:
            requests:
              memmory: "32Mi"
              cpu: "100m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          env:
            - name: PORT
              value: "5001"
            - name: MONGODB_URI
              value: "mongodb://blog-admin:password01@localhost:32768/blog-engine"
            - name: JWT_SECRET
              value: "your-super-secret-jwt-key"
            - name: SESSION_SECRET
              value: "your-super-secret-session-key"
            - name: FRONTEND_URL
              value: "http://localhost:3000"
            - name: GOOGLE_CLIENT_ID
              value: "your-google-client-id"
            - name: GOOGLE_CLIENT_SECRET
              value: "your-google-client-secret"
            - name: STRAPI_URL
              value: "http://localhost:1337"
          ports:
            - containerPort: 5001
              name: http
              protocol: TCP
          livenessProbe:
            httpGet:
              port: http
              path: /api/users
          readinessProbe:
            httpGet:
              port: http
              path: /api/users
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: microservice-write-blog-test
  namespace: blog-test
spec:
  selector:
    matchLabels:
      app: microservice-write-blog-test
  template:
    metadata:
      labels:
        app: microservice-write-blog-test
        role: write
    spec:
      containers:
        - name: microservice-write-blog-test
          image: mikamakusa/blog-test-write-service
          resources:
            requests:
              memmory: "32Mi"
              cpu: "100m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          env:
            - name: PORT
              value: "5002"
            - name: MONGODB_URI
              value: "mongodb://blog-admin:password01@localhost:32768/blog-engine"
            - name: JWT_SECRET
              value: "your-super-secret-jwt-key"
            - name: SESSION_SECRET
              value: "your-super-secret-session-key"
            - name: FRONTEND_URL
              value: "http://localhost:3000"
            - name: GOOGLE_CLIENT_ID
              value: "your-google-client-id"
            - name: GOOGLE_CLIENT_SECRET
              value: "your-google-client-secret"
            - name: STRAPI_URL
              value: "http://localhost:1337"
          ports:
            - containerPort: 5002
              name: http
              protocol: TCP
          livenessProbe:
            httpGet:
              port: http
              path: /api/posts
          readinessProbe:
            httpGet:
              port: http
              path: /api/posts
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: microservice-frontend-blog-test
  namespace: blog-test
spec:
  selector:
    matchLabels:
      app: microservice-frontend-blog-test
  template:
    metadata:
      labels:
        app: microservice-frontend-blog-test
        role: frontend
    spec:
      containers:
        - name: microservice-frontend-blog-test
          image: mikamakusa/blog-test-frontend-service
          resources:
            requests:
              memmory: "32Mi"
              cpu: "100m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
            - containerPort: 3000
              name: http
              protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: microservice-events-blog-test
  namespace: blog-test
spec:
  selector:
    app: microservice-events-blog-test
  ports:
    - port: 3001
      name: http
      protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: microservice-ads-blog-test
  namespace: blog-test
spec:
  selector:
    app: microservice-ads-blog-test
  ports:
    - port: 5003
      name: http
      protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: microservice-medias-blog-test
  namespace: blog-test
spec:
  selector:
    app: microservice-medias-blog-test
  ports:
    - port: 5004
      name: http
      protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: microservice-auth-blog-test
  namespace: blog-test
spec:
  selector:
    app: microservice-auth-blog-test
  ports:
    - port: 5000
      name: http
      protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: microservice-events-blog-test
  namespace: blog-test
spec:
  selector:
    app: microservice-events-blog-test
  ports:
    - port: 3001
      name: http
      protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: microservice-metrics-blog-test
  namespace: blog-test
spec:
  selector:
    app: microservice-metrics-blog-test
  ports:
    - port: 5005
      name: http
      protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: microservice-polls-blog-test
  namespace: blog-test
spec:
  selector:
    app: microservice-polls-blog-test
  ports:
    - port: 5006
      name: http
      protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: microservice-write-blog-test
  namespace: blog-test
spec:
  selector:
    app: microservice-write-blog-test
  ports:
    - port: 5002
      name: http
      protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: microservice-users-blog-test
  namespace: blog-test
spec:
  selector:
    app: microservice-users-blog-test
  ports:
    - port: 5001
      name: http
      protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: microservice-frontend-blog-test
  namespace: blog-test
spec:
  selector:
    app: microservice-frontend-blog-test
  ports:
    - port: 3000
      name: http
      protocol: TCP
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-ingress-only-from-frontend
  namespace: blog-test
spec:
  podSelector:
    matchLabels:
      role: frontend
  policyTypes:
  - Ingress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              role: frontend