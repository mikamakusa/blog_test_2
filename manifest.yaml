apiVersion: apps/v1
kind: Deployment
metadata:
  name: microservice-ads-blog-test
  namespace: blog-test
spec:
  selector:
    matchLabels:
      app: microservice-ads-blog-test
  template:
    metadata:
      labels:
        app: microservice-ads-blog-test
        role: ads
    spec:
      containers:
        - name: microservice-ads-blog-test
          image: docker.io/mikamakusa/blog-test-ads-service:latest
          env:
            - name: PORT
              value: "5003"
            - name: MONGODB_HOST
              value: "10.107.211.34:27017"
            - name: MONGODB_DATABASE
              value: "blog-engine"
            - name: MONGODB_USER
              valueFrom:
                secretKeyRef:
                  key: mongodb-user
                  name: mongodb-credentials
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: mongodb-password
                  name: mongodb-credentials
            - name: JWT_SECRET
              value: "your-super-secret-jwt-key"
            - name: SESSION_SECRET
              value: "your-super-secret-session-key"
            - name: FRONTEND_URL
              value: "http://localhost:3000"
            - name: GOOGLE_CLIENT_ID
              value: "your-google-client-id"
            - name: GOOGLE_CLIENT_SECRET
              value: "your-google-client-secret"
            - name: STRAPI_URL
              value: "http://localhost:1337"
          ports:
            - containerPort: 5003
              name: http
              protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: microservice-auth-blog-test
  namespace: blog-test
spec:
  selector:
    matchLabels:
      app: microservice-auth-blog-test
  template:
    metadata:
      labels:
        app: microservice-auth-blog-test
        role: auth
    spec:
      containers:
        - name: microservice-auth-blog-test
          image: docker.io/mikamakusa/blog-test-auth-service
          env:
            - name: PORT
              value: "5000"
            - name: MONGODB_HOST
              value: "10.107.211.34:27017"
            - name: MONGODB_DATABASE
              value: "blog-engine"
            - name: MONGODB_USER
              valueFrom:
                secretKeyRef:
                  key: mongodb-user
                  name: mongodb-credentials
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: mongodb-password
                  name: mongodb-credentials
            - name: JWT_SECRET
              value: "your-super-secret-jwt-key"
            - name: SESSION_SECRET
              value: "your-super-secret-session-key"
            - name: FRONTEND_URL
              value: "http://microservice-frontend-blog-test:3000"
            - name: GOOGLE_CLIENT_ID
              value: "your-google-client-id"
            - name: GOOGLE_CLIENT_SECRET
              value: "your-google-client-secret"
            - name: STRAPI_URL
              value: "http://localhost:1337"
          ports:
            - containerPort: 5000
              name: http
              protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: microservice-events-blog-test
  namespace: blog-test
spec:
  selector:
    matchLabels:
      app: microservice-events-blog-test
  template:
    metadata:
      labels:
        app: microservice-events-blog-test
        role: events
    spec:
      containers:
        - name: microservice-events-blog-test
          image: docker.io/mikamakusa/blog-test-events-service
          env:
            - name: PORT
              value: "3001"
            - name: MONGODB_HOST
              value: "10.107.211.34:27017"
            - name: MONGODB_DATABASE
              value: "blog-engine"
            - name: MONGODB_USER
              valueFrom:
                secretKeyRef:
                  key: mongodb-user
                  name: mongodb-credentials
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: mongodb-password
                  name: mongodb-credentials
          ports:
            - containerPort: 5000
              name: http
              protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: microservice-medias-blog-test
  namespace: blog-test
spec:
  selector:
    matchLabels:
      app: microservice-medias-blog-test
  template:
    metadata:
      labels:
        app: microservice-medias-blog-test
        role: medias
    spec:
      containers:
        - name: microservice-medias-blog-test
          image: docker.io/mikamakusa/blog-test-medias-service
          env:
            - name: PORT
              value: "5004"
            - name: MONGODB_HOST
              value: "10.107.211.34:27017"
            - name: MONGODB_DATABASE
              value: "blog-engine"
            - name: MONGODB_USER
              valueFrom:
                secretKeyRef:
                  key: mongodb-user
                  name: mongodb-credentials
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: mongodb-password
                  name: mongodb-credentials
            - name: MINIO_ENDPOINT
              value: "10.105.198.235"
            - name: MINIO_PORT
              value: "9000"
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  key: minio-access-key
                  name: minio-credentials-2
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  key: minio-secret-key
                  name: minio-credentials-2
          ports:
            - containerPort: 5004
              name: http
              protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: microservice-metrics-blog-test
  namespace: blog-test
spec:
  selector:
    matchLabels:
      app: microservice-metrics-blog-test
  template:
    metadata:
      labels:
        app: microservice-metrics-blog-test
        role: metrics
    spec:
      containers:
        - name: microservice-metrics-blog-test
          image: docker.io/mikamakusa/blog-test-metrics-service
          env:
            - name: PORT
              value: "5005"
            - name: MONGODB_HOST
              value: "10.107.211.34:27017"
            - name: MONGODB_DATABASE
              value: "blog-engine"
            - name: MONGODB_USER
              valueFrom:
                secretKeyRef:
                  key: mongodb-user
                  name: mongodb-credentials
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: mongodb-password
                  name: mongodb-credentials
            - name: JWT_SECRET
              value: "your-super-secret-jwt-key"
            - name: SESSION_SECRET
              value: "your-super-secret-session-key"
            - name: FRONTEND_URL
              value: "http://localhost:3000"
            - name: GOOGLE_CLIENT_ID
              value: "your-google-client-id"
            - name: GOOGLE_CLIENT_SECRET
              value: "your-google-client-secret"
            - name: STRAPI_URL
              value: "http://localhost:1337"
          ports:
            - containerPort: 5005
              name: http
              protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: microservice-polls-blog-test
  namespace: blog-test
spec:
  selector:
    matchLabels:
      app: microservice-polls-blog-test
  template:
    metadata:
      labels:
        app: microservice-polls-blog-test
        role: polls
    spec:
      containers:
        - name: microservice-polls-blog-test
          image: docker.io/mikamakusa/blog-test-polls-service
          env:
            - name: PORT
              value: "5006"
            - name: MONGODB_HOST
              value: "10.107.211.34:27017"
            - name: MONGODB_DATABASE
              value: "blog-engine"
            - name: MONGODB_USER
              valueFrom:
                secretKeyRef:
                  key: mongodb-user
                  name: mongodb-credentials
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: mongodb-password
                  name: mongodb-credentials
            - name: JWT_SECRET
              value: "your-super-secret-jwt-key"
          ports:
            - containerPort: 5006
              name: http
              protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: microservice-users-blog-test
  namespace: blog-test
spec:
  selector:
    matchLabels:
      app: microservice-users-blog-test
  template:
    metadata:
      labels:
        app: microservice-users-blog-test
        role: users
    spec:
      containers:
        - name: microservice-users-blog-test
          image: docker.io/mikamakusa/blog-test-users-service
          env:
            - name: PORT
              value: "5001"
            - name: MONGODB_HOST
              value: "10.107.211.34:27017"
            - name: MONGODB_DATABASE
              value: "blog-engine"
            - name: MONGODB_USER
              valueFrom:
                secretKeyRef:
                  key: mongodb-user
                  name: mongodb-credentials
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: mongodb-password
                  name: mongodb-credentials
            - name: JWT_SECRET
              value: "your-super-secret-jwt-key"
            - name: SESSION_SECRET
              value: "your-super-secret-session-key"
            - name: FRONTEND_URL
              value: "http://microservice-frontend-blog-test:3000"
            - name: GOOGLE_CLIENT_ID
              value: "your-google-client-id"
            - name: GOOGLE_CLIENT_SECRET
              value: "your-google-client-secret"
            - name: STRAPI_URL
              value: "http://localhost:1337"
          ports:
            - containerPort: 5001
              name: http
              protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: microservice-write-blog-test
  namespace: blog-test
spec:
  selector:
    matchLabels:
      app: microservice-write-blog-test
  template:
    metadata:
      labels:
        app: microservice-write-blog-test
        role: write
    spec:
      containers:
        - name: microservice-write-blog-test
          image: docker.io/mikamakusa/blog-test-write-service
          env:
            - name: PORT
              value: "5002"
            - name: MONGODB_HOST
              value: "10.107.211.34:27017"
            - name: MONGODB_DATABASE
              value: "blog-engine"
            - name: MONGODB_USER
              valueFrom:
                secretKeyRef:
                  key: mongodb-user
                  name: mongodb-credentials
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: mongodb-password
                  name: mongodb-credentials
            - name: JWT_SECRET
              value: "your-super-secret-jwt-key"
            - name: SESSION_SECRET
              value: "your-super-secret-session-key"
            - name: FRONTEND_URL
              value: "http://localhost:3000"
            - name: GOOGLE_CLIENT_ID
              value: "your-google-client-id"
            - name: GOOGLE_CLIENT_SECRET
              value: "your-google-client-secret"
            - name: STRAPI_URL
              value: "http://localhost:1337"
          ports:
            - containerPort: 5002
              name: http
              protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: microservice-frontend-blog-test
  namespace: blog-test
spec:
  selector:
    matchLabels:
      app: microservice-frontend-blog-test
  template:
    metadata:
      labels:
        app: microservice-frontend-blog-test
        role: frontend
    spec:
      containers:
        - name: microservice-frontend-blog-test
          image: docker.io/mikamakusa/blog-test-frontend
          env:
            - name: AUTH_URI
              value: "microservice-auth-blog-test.blog-test.svc.cluster.local:5000"
            - name: ADS_URI
              value: "microservice-ads-blog-test.blog-test.svc.cluster.local:5003"
            - name: POSTS_URI
              value: "microservice-write-blog-test.blog-test.svc.cluster.local:5002"
            - name: EVENTS_URI
              value: "microservice-events-blog-test.blog-test.svc.cluster.local:3001"
            - name: MEDIAS_URI
              value: "microservice-medias-blog-test.blog-test.svc.cluster.local:5004"
            - name: METRICS_URI
              value: "microservice-metrics-blog-test.blog-test.svc.cluster.local:5005"
            - name: POLLS_URI
              value: "microservice-polls-blog-test.blog-test.svc.cluster.local:5006"
            - name: USERS_URI
              value: "microservice-users-blog-test.blog-test.svc.cluster.local:5001"
          ports:
            - containerPort: 3000
              name: http
              protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: microservice-events-blog-test
  namespace: blog-test
spec:
  selector:
    app: microservice-events-blog-test
  ports:
    - port: 3001
      name: http
      protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: microservice-ads-blog-test
  namespace: blog-test
spec:
  selector:
    app: microservice-ads-blog-test
  ports:
    - port: 5003
      name: http
      protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: microservice-medias-blog-test
  namespace: blog-test
spec:
  selector:
    app: microservice-medias-blog-test
  ports:
    - port: 5004
      name: http
      protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: microservice-auth-blog-test
  namespace: blog-test
spec:
  selector:
    app: microservice-auth-blog-test
  ports:
    - port: 5000
      name: http
      protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: microservice-events-blog-test
  namespace: blog-test
spec:
  selector:
    app: microservice-events-blog-test
  ports:
    - port: 3001
      name: http
      protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: microservice-metrics-blog-test
  namespace: blog-test
spec:
  selector:
    app: microservice-metrics-blog-test
  ports:
    - port: 5005
      name: http
      protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: microservice-polls-blog-test
  namespace: blog-test
spec:
  selector:
    app: microservice-polls-blog-test
  ports:
    - port: 5006
      name: http
      protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: microservice-write-blog-test
  namespace: blog-test
spec:
  selector:
    app: microservice-write-blog-test
  ports:
    - port: 5002
      name: http
      protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: microservice-users-blog-test
  namespace: blog-test
spec:
  selector:
    app: microservice-users-blog-test
  ports:
    - port: 5001
      name: http
      protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: microservice-frontend-blog-test
  namespace: blog-test
spec:
  selector:
    app: microservice-frontend-blog-test
  ports:
    - port: 3000
      name: http
      protocol: TCP
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-ingress-only-from-frontend
  namespace: blog-test
spec:
  podSelector:
    matchLabels:
      role: frontend
  policyTypes:
  - Ingress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              role: frontend